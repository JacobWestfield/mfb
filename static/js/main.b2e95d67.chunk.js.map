{"version":3,"sources":["app/components/ui/navBar.jsx","app/utils/validator.js","app/components/common/form/textField.jsx","app/services/http.service.js","app/services/billService.js","app/redux/reducers/billsReducer.js","app/components/common/form/newBillForm.jsx","app/components/common/form/selectField.jsx","app/components/common/form/editBillForm.jsx","app/layouts/bills.jsx","app/services/categoryService.js","app/redux/reducers/categoriesReducer.js","app/components/common/form/editCategoryForm.jsx","app/components/common/form/newCategoryForm.jsx","app/layouts/categories.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/table.jsx","app/components/common/table/bill.jsx","app/components/common/table/category.jsx","app/utils/getDate.js","app/components/common/table/date.jsx","app/components/common/historyPage/operationsTable.jsx","app/services/operation.service.js","app/redux/reducers/operationsReducer.js","app/components/common/historyPage/pagination.jsx","app/components/common/historyPage/groupList.jsx","app/components/common/historyPage/operationsListPage.jsx","app/utils/paginate.js","app/layouts/history.jsx","app/components/ui/loginForm.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/components/ui/billsBlock.jsx","app/components/ui/categoriesBlock.jsx","app/components/ui/analyticsBlock.jsx","app/components/common/form/newOperationForm.jsx","app/components/common/form/editOperationForm.jsx","app/layouts/index.js","app/layouts/operations.jsx","app/layouts/settings.jsx","app/layouts/main.jsx","app/App.js","app/redux/store/store.js","index.js"],"names":["NavBar","_jsx","children","className","_jsxs","Link","to","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","_ref","label","type","name","onChange","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","htmlFor","id","_ref2","target","onClick","prevState","defaultProps","http","axios","create","baseURL","configFile","apiEndpoint","interceptors","request","use","isFireBase","containSlash","url","slice","Promise","reject","response","res","content","Object","keys","map","key","_objectSpread","status","console","log","httpService","get","post","put","delete","billEndpoint","billService","_get","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$httpService$ge","wrap","_context","prev","next","sent","abrupt","stop","apply","arguments","update","_update","_callee2","payload","_yield$httpService$pu","_context2","_id","_x","_create","_callee3","_yield$httpService$pu2","_context3","_x2","_delete2","_callee4","_yield$httpService$de","_context4","_x3","billSlice","createSlice","initialState","entities","loading","reducers","createdBill","state","action","push","toast","deletedBill","filter","el","updatedBill","findIndex","requestedBill","loadedBill","loadedBillError","concat","_toConsumableArray","billReducer","reducer","billActions","actions","loadBills","dispatch","_yield$billService$ge","t0","NewBillForm","useDispatch","setData","_useState3","_useState4","setErrors","handleChange","_defineProperty","nanoid","validatorConfig","isRequired","min","useEffect","isValid","_Fragment","onSubmit","e","preventDefault","_ref4","_x4","createBill","disabled","SelectField","defaultOption","options","optionsArray","Array","isArray","values","option","EditBillForm","bills","useSelector","bill","billsLoading","billsList","handleDelete","deleteBill","_ref3","updateBill","Bills","useParams","formType","setFormType","toggleFormType","role","categoryEndpoint","categoryService","categorySlice","categoryCreated","categoryDeleted","categoryUpdated","categoryRequested","categoryLoaded","categoryRequestedError","categoryReducer","categoryActions","loadCategories","_yield$categoryServic","EditCategoryForm","categories","category","categoriesLoading","existingCategories","deleteCategory","updateCategory","NewCategoryForm","createCategory","Categories","TableBody","columns","renderContent","item","column","component","_","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","Bill","operation","find","loadingBill","Category","loadingCategory","getDate","timestamp","date","Date","month","getMonth","year","getFullYear","DateComponent","OperationsTable","operations","onDelete","_objectWithoutProperties","_excluded","deleteButton","operationEndpoint","operationService","operationSlice","operationCreated","operationDeleted","operationUpdated","operationRequested","operationLoaded","operationRequestedError","operationReducer","operationActions","loadOperations","_yield$operationServi","deleteOperation","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","Math","ceil","pages","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","OperationsListPage","operationsLoading","datesList","index","array","indexOf","setCurrentPage","selectedBill","setSelectedBill","_useState5","_useState6","selectedCategory","setSelectedCategory","_useState7","_useState8","selectedDate","setSelectedDate","_useState9","_useState10","sortBy","setSortBy","filteredOperations","filterOperations","count","operationsCrop","pageNumber","startIndex","splice","paginate","orderBy","operationId","pageIndex","History","LoginForm","email","password","stayOn","isEmail","isCapitalSymbol","isContainDigit","handleSubmit","CheckBoxField","checked","RegisterForm","licence","Login","BillsBlock","CategoriesBlock","AnalyticsBlock","incomeList","_step","tempList","_iterator","_createForOfIteratorHelper","s","n","done","_step2","_iterator2","err","f","configureIncomeList","outcomeList","_step3","_iterator3","_step4","_iterator4","configureOutcomeList","incomeSummary","reduce","acc","Number","outcomeSummary","dataSet","x","y","VictoryPie","theme","VictoryTheme","material","style","labels","fontSize","fill","padding","size","colorScale","NewOperationForm","categoriesList","commentary","now","_x5","createOperation","EditOperationForm","operationsList","getState","updateOperation","LAYOUTS","Operations","Settings","Main","App","ToastContainer","Switch","Route","exact","Redirect","store","configureStore","middleware","getDefaultMiddleware","devTools","process","ReactDOM","createRoot","document","getElementById","render","React","StrictMode","BrowserRouter","Provider"],"mappings":"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","file":"static/js/main.b2e95d67.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst NavBar = () => {\n    return (\n        <nav>\n            <div className=\"container mb-5\">\n                <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link link-warning\"\n                            aria-current=\"page\"\n                            to=\"/\"\n                        >\n                            Main\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link link-warning\"\n                            aria-current=\"page\"\n                            to=\"/login\"\n                        >\n                            Login\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link link-warning\"\n                            aria-current=\"page\"\n                            to=\"/operation/createoperation\"\n                        >\n                            New Operation / Edit Operation\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link link-warning\"\n                            aria-current=\"page\"\n                            to=\"/category/createcategory\"\n                        >\n                            New Category / Edit Category\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link link-warning\"\n                            aria-current=\"page\"\n                            to=\"/bill/createbill\"\n                        >\n                            New Bill / Edit Bill\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link link-warning\"\n                            aria-current=\"page\"\n                            to=\"/history\"\n                        >\n                            History\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link link-warning\"\n                            aria-current=\"page\"\n                            to=\"/settings\"\n                        >\n                            Settings\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import axios from \"axios\";\nimport configFile from \"../config.json\";\n\nconst http = axios.create({\n    baseURL: configFile.apiEndpoint\n});\n\nhttp.interceptors.request.use(\n    function (config) {\n        if (configFile.isFireBase) {\n            const containSlash = /\\/$/gi.test(config);\n            config.url =\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\n        }\n        return config;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\n\nfunction transformData(data) {\n    return data\n        ? Object.keys(data).map((key) => ({\n              ...data[key]\n          }))\n        : [];\n}\n\nhttp.interceptors.response.use(\n    (res) => {\n        if (configFile.isFireBase) {\n            res.data = { content: transformData(res.data) };\n        }\n        return res;\n    },\n    function (error) {\n        const expectedErrors =\n            error.response &&\n            error.response.status >= 400 &&\n            error.response.status < 500;\n\n        if (!expectedErrors) {\n            console.log(error);\n        }\n        return Promise.reject(error);\n    }\n);\nconst httpService = {\n    get: http.get,\n    post: http.post,\n    put: http.put,\n    delete: http.delete\n};\nexport default httpService;\n","import httpService from \"./http.service\";\r\n\r\nconst billEndpoint = \"bill/\";\r\n\r\nconst billService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(billEndpoint);\r\n        return data;\r\n    },\r\n    update: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            billEndpoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            billEndpoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    delete: async (payload) => {\r\n        const { data } = await httpService.delete(billEndpoint + payload);\r\n        return data;\r\n    }\r\n};\r\nexport default billService;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport billService from \"../../services/billService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst initialState = {\r\n    entities: [],\r\n    loading: true,\r\n    errors: []\r\n};\r\n\r\nconst billSlice = createSlice({\r\n    name: \"bills\",\r\n    initialState,\r\n    reducers: {\r\n        createdBill(state, action) {\r\n            state.entities.push(action.payload);\r\n            toast(\"Счет успешно создан\");\r\n        },\r\n        deletedBill(state, action) {\r\n            state.entities = state.entities.filter(\r\n                (el) => el._id !== action.payload\r\n            );\r\n            toast(\"Счет успешно удален\");\r\n            state.loading = false;\r\n        },\r\n        updatedBill(state, action) {\r\n            const findIndex = (id) => {\r\n                return state.entities.findIndex((el) => el._id === id);\r\n            };\r\n            toast(\"Счет успешно изменен\");\r\n            state.entities[findIndex(action.payload._id)] = {\r\n                ...action.payload\r\n            };\r\n            state.loading = false;\r\n        },\r\n        requestedBill(state) {\r\n            state.loading = true;\r\n        },\r\n        loadedBill(state, action) {\r\n            state.loading = false;\r\n            state.entities = action.payload;\r\n        },\r\n        loadedBillError(state, action) {\r\n            toast(\"Network Error. Try later\");\r\n            console.log(action.payload);\r\n            state.loading = false;\r\n            state.errors = [...state.errors, action.payload];\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: billReducer, actions: billActions } = billSlice;\r\nexport const {\r\n    createdBill,\r\n    deletedBill,\r\n    updatedBill,\r\n    requestedBill,\r\n    loadedBill,\r\n    loadedBillError\r\n} = billActions;\r\n\r\nexport const loadBills = () => async (dispatch) => {\r\n    dispatch(requestedBill());\r\n    try {\r\n        const { content } = await billService.get();\r\n        dispatch(loadedBill(content));\r\n    } catch (error) {\r\n        dispatch(loadedBillError(error.message));\r\n    }\r\n};\r\n\r\nexport const deleteBill = (id) => async (dispatch) => {\r\n    dispatch(requestedBill());\r\n    try {\r\n        await billService.delete(id);\r\n        dispatch(deletedBill(id));\r\n    } catch (error) {\r\n        dispatch(loadedBillError(error.message));\r\n    }\r\n};\r\n\r\nexport const updateBill = (data) => async (dispatch) => {\r\n    dispatch(requestedBill());\r\n    try {\r\n        await billService.update(data);\r\n        dispatch(updatedBill(data));\r\n    } catch (error) {\r\n        dispatch(loadedBillError(error.message));\r\n    }\r\n};\r\n\r\nexport const createBill = (data) => async (dispatch) => {\r\n    dispatch(requestedBill());\r\n    try {\r\n        await billService.create(data);\r\n        dispatch(createdBill(data));\r\n    } catch (error) {\r\n        dispatch(loadedBillError(error.message));\r\n    }\r\n};\r\n\r\nexport default billReducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport TextField from \"./textField\";\r\nimport { createBill } from \"../../../redux/reducers/billsReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\n\r\nconst NewBillForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        type: \"\",\r\n        _id: \"\"\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            _id: nanoid(),\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        name: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            },\r\n            min: {\r\n                message: \"Название должно состоять хотябы из 3-х символов\",\r\n                value: 3\r\n            }\r\n        },\r\n        type: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            },\r\n            min: {\r\n                message: \"Тип счета должен состоять хотябы из 3-х символов\",\r\n                value: 3\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        dispatch(createBill(data));\r\n    };\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField\r\n                    label=\"Название счета\"\r\n                    name=\"name\"\r\n                    value={data.name}\r\n                    onChange={handleChange}\r\n                    error={errors.name}\r\n                />\r\n                <TextField\r\n                    label=\"Тип счета (Вклад, дебетовая карта, кредитная карта и т.д.\"\r\n                    name=\"type\"\r\n                    value={data.type}\r\n                    onChange={handleChange}\r\n                    error={errors.type}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary w-100 mx-auto mb-4\"\r\n                    type=\"submit\"\r\n                    disabled={!isValid}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewBillForm;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name} className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id={name}\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option value=\"\">{defaultOption}</option>\n                {optionsArray.length > 0 &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React, { useEffect, useState } from \"react\";\r\nimport TextField from \"./textField\";\r\nimport SelectField from \"./selectField\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    loadBills,\r\n    deleteBill,\r\n    updateBill\r\n} from \"../../../redux/reducers/billsReducer\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst EditBillForm = () => {\r\n    const dispatch = useDispatch();\r\n    const bills = useSelector((state) => state.bill.entities);\r\n    const billsLoading = useSelector((state) => state.bill.loading);\r\n    const [errors, setErrors] = useState({});\r\n    const billsList = bills.map((bill) => ({\r\n        label: bill.name,\r\n        value: bill._id\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(loadBills());\r\n    }, []);\r\n\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        type: \"\",\r\n        _id: \"\"\r\n    });\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n        console.log(data);\r\n    };\r\n    const validatorConfig = {\r\n        name: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            },\r\n            min: {\r\n                message: \"Название должно состоять хотябы из 3-х символов\",\r\n                value: 3\r\n            }\r\n        },\r\n        type: {\r\n            isRequired: {\r\n                message: \"Выбор обязателен\"\r\n            }\r\n        },\r\n        _id: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!isValid) return;\r\n        console.log(data);\r\n        dispatch(updateBill(data));\r\n    };\r\n\r\n    if (bills.loading) {\r\n        return <h1 className=\"display - 1\">Loading...</h1>;\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        if (errors._id) {\r\n            toast(\"Choose bill\");\r\n            return;\r\n        }\r\n        dispatch(deleteBill(id));\r\n    };\r\n\r\n    if (billsLoading) {\r\n        return <h1>Loading ...</h1>;\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <SelectField\r\n                    label=\"Выберите счет для редактирования\"\r\n                    name=\"_id\"\r\n                    defaultOption=\"\"\r\n                    options={billsList}\r\n                    onChange={handleChange}\r\n                />\r\n                <TextField\r\n                    label=\"Название счета\"\r\n                    name=\"name\"\r\n                    value={data.name}\r\n                    onChange={handleChange}\r\n                />\r\n                <TextField\r\n                    label=\"Тип счета (Вклад, дебетовая карта, кредитная карта и т.д.\"\r\n                    name=\"type\"\r\n                    value={data.type}\r\n                    onChange={handleChange}\r\n                />\r\n                <button\r\n                    className=\"btn mb-4 btn-primary w-100 mx-auto\"\r\n                    type=\"submit\"\r\n                    disabled={!isValid}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </form>\r\n            <button\r\n                onClick={() => handleDelete(data._id)}\r\n                className=\"btn btn-danger w-100 mx-auto\"\r\n                type=\"submit\"\r\n            >\r\n                Delete\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditBillForm;\r\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NewBillForm from \"../components/common/form/newBillForm\";\nimport EditBillForm from \"../components/common/form/editBillForm\";\n\nconst Bills = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"createbill\" ? type : \"editbill\"\n    );\n    const toggleFormType = () => {\n        setFormType((prevState) =>\n            prevState === \"editbill\" ? \"createbill\" : \"editbill\"\n        );\n    };\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"editbill\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Редактирование счета</h3>\n                            <EditBillForm />\n                            <p>\n                                Хотите редактировать уже существующий счет?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Переходите по этой ссылке\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Создание счета</h3>\n                            <NewBillForm />\n                            <p>\n                                Хотите создать новый счет?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Переходите по этой ссылке\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Bills;\n","import httpService from \"./http.service\";\r\n\r\nconst categoryEndpoint = \"category/\";\r\n\r\nconst categoryService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(categoryEndpoint);\r\n        return data;\r\n    },\r\n    update: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            categoryEndpoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            categoryEndpoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    delete: async (payload) => {\r\n        const data = await httpService.delete(categoryEndpoint + payload);\r\n        return data;\r\n    }\r\n};\r\nexport default categoryService;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport categoryService from \"../../services/categoryService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst initialState = {\r\n    entities: [],\r\n    loading: true,\r\n    errors: []\r\n};\r\n\r\nconst categorySlice = createSlice({\r\n    name: \"categories\",\r\n    initialState,\r\n    reducers: {\r\n        categoryCreated(state, action) {\r\n            state.entities.push(action.payload);\r\n            toast(\"Категория успешно создана\");\r\n        },\r\n        categoryDeleted(state, action) {\r\n            state.entities = state.entities.filter(\r\n                (el) => el._id !== action.payload\r\n            );\r\n            toast(\"Категория успешно удалена\");\r\n            state.loading = false;\r\n        },\r\n        categoryUpdated(state, action) {\r\n            const findIndex = (id) => {\r\n                return state.entities.findIndex((el) => el._id === id);\r\n            };\r\n            toast(\"Категория успешно изменена\");\r\n            state.entities[findIndex(action.payload._id)] = {\r\n                ...action.payload\r\n            };\r\n            state.loading = false;\r\n        },\r\n        categoryRequested(state) {\r\n            state.loading = true;\r\n        },\r\n        categoryLoaded(state, action) {\r\n            state.loading = false;\r\n            state.entities = action.payload;\r\n        },\r\n        categoryRequestedError(state, action) {\r\n            state.loading = false;\r\n            state.errors = [...state.errors, action.payload];\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: categoryReducer, actions: categoryActions } = categorySlice;\r\nexport const {\r\n    categoryCreated,\r\n    categoryDeleted,\r\n    categoryUpdated,\r\n    categoryRequested,\r\n    categoryLoaded,\r\n    categoryRequestedError\r\n} = categoryActions;\r\n\r\nexport const loadCategories = () => async (dispatch) => {\r\n    dispatch(categoryRequested());\r\n    try {\r\n        const { content } = await categoryService.get();\r\n        dispatch(categoryLoaded(content));\r\n    } catch (error) {\r\n        dispatch(categoryRequestedError(error.message));\r\n    }\r\n};\r\n\r\nexport const deleteCategory = (id) => async (dispatch) => {\r\n    dispatch(categoryRequested());\r\n    try {\r\n        await categoryService.delete(id);\r\n        dispatch(categoryDeleted(id));\r\n    } catch (error) {\r\n        dispatch(categoryRequestedError(error.message));\r\n    }\r\n};\r\n\r\nexport const updateCategory = (data) => async (dispatch) => {\r\n    dispatch(categoryRequested());\r\n    try {\r\n        await categoryService.update(data);\r\n        dispatch(categoryUpdated(data));\r\n    } catch (error) {\r\n        dispatch(categoryRequestedError(error.message));\r\n    }\r\n};\r\n\r\nexport const createCategory = (data) => async (dispatch) => {\r\n    dispatch(categoryRequested());\r\n    try {\r\n        await categoryService.create(data);\r\n        dispatch(categoryCreated(data));\r\n    } catch (error) {\r\n        dispatch(categoryRequestedError(error.message));\r\n    }\r\n};\r\n\r\nexport default categoryReducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport TextField from \"./textField\";\r\nimport SelectField from \"./selectField\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    deleteCategory,\r\n    loadCategories,\r\n    updateCategory\r\n} from \"../../../redux/reducers/categoriesReducer\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst EditCategoryForm = () => {\r\n    const dispatch = useDispatch();\r\n    const categories = useSelector((state) => state.category.entities);\r\n    const categoriesLoading = useSelector((state) => state.category.loading);\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        type: \"\",\r\n        _id: \"\"\r\n    });\r\n    useEffect(() => {\r\n        dispatch(loadCategories());\r\n    }, []);\r\n\r\n    const types = [\r\n        { value: \"Income\", label: \"Доход\" },\r\n        { value: \"Outcome\", label: \"Расход\" }\r\n    ];\r\n    const existingCategories = categories.map((category) => ({\r\n        label: category.name,\r\n        value: category._id\r\n    }));\r\n    const [errors, setErrors] = useState({});\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        name: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            },\r\n            min: {\r\n                message: \"Название должно состоять хотябы из 3-х символов\",\r\n                value: 3\r\n            }\r\n        },\r\n        type: {\r\n            isRequired: {\r\n                message: \"Выбор обязателен\"\r\n            }\r\n        },\r\n        _id: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        console.log(data);\r\n        dispatch(updateCategory(data));\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        if (errors._id) {\r\n            toast(\"Choose category\");\r\n            return;\r\n        }\r\n        dispatch(deleteCategory(id));\r\n    };\r\n\r\n    if (categoriesLoading) {\r\n        return <h1>Loading ...</h1>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <SelectField\r\n                    label=\"Выберите категорию, которую хотите изменить\"\r\n                    name=\"_id\"\r\n                    defaultOption=\"\"\r\n                    options={existingCategories}\r\n                    onChange={handleChange}\r\n                    error={errors._id}\r\n                />\r\n                <TextField\r\n                    label=\"Новое название категории\"\r\n                    name=\"name\"\r\n                    value={data.name}\r\n                    onChange={handleChange}\r\n                    error={errors.name}\r\n                />\r\n                <SelectField\r\n                    label=\"Выберите тип категории\"\r\n                    name=\"type\"\r\n                    defaultOption=\"\"\r\n                    options={types}\r\n                    onChange={handleChange}\r\n                    error={errors.type}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary w-100 mx-auto mb-4\"\r\n                    type=\"submit\"\r\n                    disabled={!isValid}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </form>\r\n            <button\r\n                onClick={() => handleDelete(data._id)}\r\n                className=\"btn btn-danger w-100 mx-auto\"\r\n                type=\"submit\"\r\n            >\r\n                Delete\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditCategoryForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport TextField from \"./textField\";\r\nimport SelectField from \"./selectField\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { createCategory } from \"../../../redux/reducers/categoriesReducer\";\r\n\r\nconst NewCategoryForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        type: \"\",\r\n        _id: \"\"\r\n    });\r\n\r\n    const types = [\r\n        { label: \"Доход\", value: \"Income\" },\r\n        { label: \"Расход\", value: \"Outcome\" }\r\n    ];\r\n    const [errors, setErrors] = useState({});\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            _id: nanoid(),\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        name: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            },\r\n            min: {\r\n                message: \"Название должно состоять хотябы из 3-х символов\",\r\n                value: 3\r\n            }\r\n        },\r\n        type: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        dispatch(createCategory(data));\r\n    };\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField\r\n                    label=\"Название категории\"\r\n                    name=\"name\"\r\n                    value={data.name}\r\n                    onChange={handleChange}\r\n                    error={errors.name}\r\n                />\r\n                <SelectField\r\n                    label=\"Выберите тип категории\"\r\n                    name=\"type\"\r\n                    defaultOption=\"\"\r\n                    options={types}\r\n                    onChange={handleChange}\r\n                    error={errors.type}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary w-100 mx-auto mb-4\"\r\n                    type=\"submit\"\r\n                    disabled={!isValid}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewCategoryForm;\r\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport EditCategoryForm from \"../components/common/form/editCategoryForm\";\nimport NewCategoryForm from \"../components/common/form/newCategoryForm\";\n\nconst Categories = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"createcategory\" ? type : \"editcategory\"\n    );\n    const toggleFormType = () => {\n        setFormType((prevState) =>\n            prevState === \"editcategory\" ? \"createcategory\" : \"editcategory\"\n        );\n    };\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"editcategory\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Редактирование категории</h3>\n                            <EditCategoryForm />\n                            <p>\n                                Хотите создать новую категорию?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Переходите по этой ссылке\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Создание категории</h3>\n                            <NewCategoryForm />\n                            <p>\n                                Хотите редактировать уже существующую категорию?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Переходите по этой ссылке\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Categories;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n    const renderContent = (item, column) => {\r\n        if (columns[column].component) {\r\n            const component = columns[column].component;\r\n            if (typeof component === \"function\") {\r\n                return component(item);\r\n            }\r\n            return component;\r\n        }\r\n        return _.get(item, columns[column].path);\r\n    };\r\n    return (\r\n        <tbody>\r\n            {data.map((item) => (\r\n                <tr key={item._id}>\r\n                    {Object.keys(columns).map((column) => (\r\n                        <td key={column}>{renderContent(item, column)}</td>\r\n                    ))}\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nTableBody.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n    const handleSort = (item) => {\r\n        if (selectedSort.path === item) {\r\n            onSort({\r\n                ...selectedSort,\r\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\r\n            });\r\n        } else {\r\n            onSort({ path: item, order: \"asc\" });\r\n        }\r\n    };\r\n    const rendeSortArrow = (selectedSort, currentPath) => {\r\n        if (selectedSort.path === currentPath) {\r\n            if (selectedSort.order === \"asc\") {\r\n                return <i className=\"bi bi-caret-down-fill\"></i>;\r\n            } else {\r\n                return <i className=\"bi bi-caret-up-fill\"></i>;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {Object.keys(columns).map((column) => (\r\n                    <th\r\n                        key={column}\r\n                        onClick={\r\n                            columns[column].path\r\n                                ? () => handleSort(columns[column].path)\r\n                                : undefined\r\n                        }\r\n                        {...{ role: columns[column].path && \"button\" }}\r\n                        scope=\"col\"\r\n                    >\r\n                        {columns[column].name}{\" \"}\r\n                        {rendeSortArrow(selectedSort, columns[column].path)}\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\nTableHeader.propTypes = {\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableBody from \"./tableBody\";\r\nimport TableHeader from \"./tableHeader\";\r\n\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n    return (\r\n        <table className=\"table table-dark\">\r\n            {children || (\r\n                <>\r\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\r\n                    <TableBody {...{ columns, data }} />\r\n                </>\r\n            )}\r\n        </table>\r\n    );\r\n};\r\nTable.propTypes = {\r\n    onSort: PropTypes.func,\r\n    selectedSort: PropTypes.object,\r\n    columns: PropTypes.object,\r\n    data: PropTypes.array,\r\n    children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Bill = ({ operation }) => {\r\n    const bills = useSelector((state) => state.bill.entities);\r\n    const bill = bills.find((bill) => bill._id === operation.bill);\r\n    const loadingBill = useSelector((state) => state.bill.loading);\r\n    if (bills.length === 0) {\r\n        return \"Нет счетов\";\r\n    }\r\n    if (!loadingBill && bills.length) {\r\n        return <p>{bill.name}</p>;\r\n    } else return \"Loading...\";\r\n};\r\n\r\nBill.propTypes = {\r\n    operation: PropTypes.object\r\n};\r\n\r\nexport default Bill;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Category = ({ operation }) => {\r\n    const categories = useSelector((state) => state.category.entities);\r\n    const category = categories.find(\r\n        (category) => category._id === operation.category\r\n    );\r\n    const loadingCategory = useSelector((state) => state.category.loading);\r\n    if (!category) {\r\n        return \"Нет категории\";\r\n    }\r\n    if (!loadingCategory && categories) {\r\n        return (\r\n            <p>{`${category.name} (${\r\n                category.type === \"Income\" ? \"Доход\" : \"Расход\"\r\n            })`}</p>\r\n        );\r\n    } else return \"Loading...\";\r\n};\r\n\r\nCategory.propTypes = {\r\n    operation: PropTypes.object\r\n};\r\n\r\nexport default Category;\r\n","export default function getDate(timestamp) {\r\n    const date = new Date(timestamp).getDate();\r\n    const month = new Date(timestamp).getMonth();\r\n    const year = new Date(timestamp).getFullYear();\r\n    const months = [\r\n        \"Январь\",\r\n        \"Февраль\",\r\n        \"Март\",\r\n        \"Апрель\",\r\n        \"Май\",\r\n        \"Июнь\",\r\n        \"Июль\",\r\n        \"Август\",\r\n        \"Сентябрь\",\r\n        \"Октябрь\",\r\n        \"Ноябрь\",\r\n        \"Декабрь\"\r\n    ];\r\n    return `${date}.${months[month]}.${year}`;\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport getDate from \"../../../utils/getDate\";\r\n\r\nconst DateComponent = ({ operation }) => {\r\n    const loadingOperation = useSelector((state) => state.operation.loading);\r\n    if (!loadingOperation && operation) {\r\n        return <p>{getDate(operation.date)}</p>;\r\n    } else return \"Loading...\";\r\n};\r\n\r\nDateComponent.propTypes = {\r\n    operation: PropTypes.object\r\n};\r\n\r\nexport default DateComponent;\r\n","/* eslint-disable */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"../table/table\";\r\nimport Bill from \"../table/bill\";\r\nimport Category from \"../table/category\";\r\nimport DateComponent from \"../table/date\";\r\n\r\nconst OperationsTable = ({\r\n    operations,\r\n    onSort,\r\n    selectedSort,\r\n    onDelete,\r\n    ...rest\r\n}) => {\r\n    const columns = {\r\n        name: {\r\n            path: \"name\",\r\n            name: \"Название операции\"\r\n        },\r\n        category: {\r\n            path: \"category\",\r\n            name: \"Категория\",\r\n            component: (operation) => <Category operation={operation} />\r\n        },\r\n        bill: {\r\n            path: \"bill\",\r\n            name: \"Счет\",\r\n            component: (operation) => <Bill operation={operation} />\r\n        },\r\n        date: {\r\n            path: \"date\",\r\n            name: \"Дата операции\",\r\n            component: (operation) => <DateComponent operation={operation} />\r\n        },\r\n        value: { path: \"value\", name: \"Сумма\" },\r\n        deleteButton: {\r\n            name: \"Удалить\",\r\n            component: (operation) => (\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => onDelete(operation)}\r\n                >\r\n                    Delete\r\n                </button>\r\n            )\r\n        }\r\n    };\r\n    return (\r\n        <Table\r\n            onSort={onSort}\r\n            selectedSort={selectedSort}\r\n            columns={columns}\r\n            data={operations}\r\n        />\r\n    );\r\n};\r\n\r\nOperationsTable.propTypes = {\r\n    operations: PropTypes.array.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired\r\n};\r\n\r\nexport default OperationsTable;\r\n","import httpService from \"./http.service\";\r\n\r\nconst operationEndpoint = \"operation/\";\r\n\r\nconst operationService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(operationEndpoint);\r\n        return data;\r\n    },\r\n    update: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            operationEndpoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            operationEndpoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    delete: async (payload) => {\r\n        const { data } = await httpService.delete(operationEndpoint + payload);\r\n        return data;\r\n    }\r\n};\r\nexport default operationService;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport operationService from \"../../services/operation.service\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst initialState = {\r\n    entities: [],\r\n    loading: true,\r\n    errors: []\r\n};\r\n\r\nconst operationSlice = createSlice({\r\n    name: \"operations\",\r\n    initialState,\r\n    reducers: {\r\n        operationCreated(state, action) {\r\n            state.entities.push(action.payload);\r\n            toast(\"Операция успешно создана\");\r\n        },\r\n        operationDeleted(state, action) {\r\n            state.entities = state.entities.filter(\r\n                (el) => el._id !== action.payload\r\n            );\r\n            toast(\"Операция успешно удалена\");\r\n            state.loading = false;\r\n        },\r\n        operationUpdated(state, action) {\r\n            const findItem = (id) => {\r\n                return state.entities.findIndex((el) => el._id === id);\r\n            };\r\n            state.entities[findItem(action.payload._id)] = {\r\n                ...action.payload\r\n            };\r\n            state.loading = false;\r\n            toast(\"Операция успешно изменена\");\r\n        },\r\n        operationRequested(state) {\r\n            state.loading = true;\r\n        },\r\n        operationLoaded(state, action) {\r\n            state.loading = false;\r\n            state.entities = action.payload;\r\n        },\r\n        operationRequestedError(state, action) {\r\n            state.loading = false;\r\n            state.errors = [...state.errors, action.payload];\r\n        }\r\n    }\r\n});\r\n\r\nconst { reducer: operationReducer, actions: operationActions } = operationSlice;\r\nexport const {\r\n    operationCreated,\r\n    operationDeleted,\r\n    operationUpdated,\r\n    operationRequested,\r\n    operationLoaded,\r\n    operationRequestedError\r\n} = operationActions;\r\n\r\nexport const loadOperations = () => async (dispatch) => {\r\n    dispatch(operationRequested());\r\n    try {\r\n        const { content } = await operationService.get();\r\n        dispatch(operationLoaded(content));\r\n    } catch (error) {\r\n        dispatch(operationRequestedError(error.message));\r\n    }\r\n};\r\n\r\nexport const deleteOperation = (id) => async (dispatch) => {\r\n    dispatch(operationRequested());\r\n    try {\r\n        await operationService.delete(id);\r\n        dispatch(operationDeleted(id));\r\n    } catch (error) {\r\n        dispatch(operationRequestedError(error.message));\r\n    }\r\n};\r\n\r\nexport const updateOperation = (data) => async (dispatch, getState) => {\r\n    dispatch(operationRequested());\r\n    const date = getState().operation.entities.find(\r\n        (el) => el._id === data._id\r\n    ).date;\r\n    data.date = date;\r\n    try {\r\n        await operationService.update(data);\r\n        dispatch(operationUpdated(data));\r\n    } catch (error) {\r\n        dispatch(operationRequestedError(error.message));\r\n    }\r\n};\r\n\r\nexport const createOperation = (data) => async (dispatch) => {\r\n    dispatch(operationRequested());\r\n    try {\r\n        await operationService.create(data);\r\n        dispatch(operationCreated(data));\r\n    } catch (error) {\r\n        dispatch(operationRequestedError(error.message));\r\n    }\r\n};\r\n\r\nexport default operationReducer;\r\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n    const pages = _.range(1, pageCount + 1);\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item\" +\n                            (page === currentPage ? \" active\" : \"\")\n                        }\n                        key={\"page_\" + page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GroupList = ({\r\n    items,\r\n    valueProperty,\r\n    contentProperty,\r\n    onItemSelect,\r\n    selectedItem\r\n}) => {\r\n    if (!Array.isArray(items)) {\r\n        return (\r\n            <ul className=\"list-group\">\r\n                {Object.keys(items).map((item) => (\r\n                    <li\r\n                        key={items[item][valueProperty]}\r\n                        className={\r\n                            \"list-group-item\" +\r\n                            (items[item] === selectedItem ? \" active\" : \"\")\r\n                        }\r\n                        onClick={() => onItemSelect(items[item])}\r\n                        role=\"button\"\r\n                    >\r\n                        {items[item][contentProperty]}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n    console.log(selectedItem);\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {items.map((item) => (\r\n                <li\r\n                    key={item[valueProperty]}\r\n                    className={\r\n                        \"list-group-item\" +\r\n                        (item === selectedItem ? \" active\" : \"\")\r\n                    }\r\n                    onClick={() => onItemSelect(item)}\r\n                    role=\"button\"\r\n                >\r\n                    {item[contentProperty]}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nGroupList.defaultProps = {\r\n    valueProperty: \"_id\",\r\n    contentProperty: \"name\"\r\n};\r\n\r\nGroupList.propTypes = {\r\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    valueProperty: PropTypes.string.isRequired,\r\n    contentProperty: PropTypes.string.isRequired,\r\n    onItemSelect: PropTypes.func,\r\n    selectedItem: PropTypes.object\r\n};\r\n\r\nexport default GroupList;\r\n","/* eslint-disable */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport OperationsTable from \"./operationsTable\";\r\nimport { paginate } from \"../../../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    deleteOperation,\r\n    loadOperations\r\n} from \"../../../redux/reducers/operationsReducer\";\r\nimport Pagination from \"./pagination\";\r\nimport GroupList from \"./groupList\";\r\nimport getDate from \"../../../utils/getDate\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\n\r\nconst OperationsListPage = () => {\r\n    const dispatch = useDispatch();\r\n    const operations = useSelector((state) => state.operation.entities);\r\n    const bills = useSelector((state) => state.bill.entities);\r\n    const categories = useSelector((state) => state.category.entities);\r\n    const operationsLoading = useSelector((state) => state.operation.loading);\r\n\r\n    const dateStamps = operations\r\n        ? operations.map((el) => getDate(el.date))\r\n        : [];\r\n    function onlyUnique(value, index, array) {\r\n        return array.indexOf(value) === index;\r\n    }\r\n    const datesList = dateStamps\r\n        .filter(onlyUnique)\r\n        .map((el) => new Object({ _id: nanoid(), name: el }));\r\n\r\n    useEffect(() => {\r\n        dispatch(loadOperations());\r\n    }, []);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [selectedBill, setSelectedBill] = useState();\r\n    const [selectedCategory, setSelectedCategory] = useState();\r\n    const [selectedDate, setSelectedDate] = useState();\r\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\r\n    const pageSize = 8;\r\n\r\n    const handleDelete = (operationId) => {\r\n        dispatch(deleteOperation(operationId._id));\r\n        console.log(operationId._id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n    }, [selectedBill, selectedCategory, selectedDate]);\r\n\r\n    const handleBillSelect = (item) => {\r\n        console.log(item);\r\n        setSelectedBill(item);\r\n    };\r\n    const handleCategorySelect = (item) => {\r\n        console.log(item);\r\n        setSelectedCategory(item);\r\n    };\r\n    const handleDateSelect = (item) => {\r\n        console.log(item);\r\n        setSelectedDate(item);\r\n    };\r\n\r\n    const handlePageChange = (pageIndex) => {\r\n        setCurrentPage(pageIndex);\r\n    };\r\n    const handleSort = (item) => {\r\n        console.log(item);\r\n        setSortBy(item);\r\n    };\r\n\r\n    const clearFilter = () => {\r\n        setSelectedBill();\r\n        setSelectedCategory();\r\n        setSelectedDate();\r\n    };\r\n\r\n    if (operationsLoading) {\r\n        return <h1 className=\"text-center\">Loading...</h1>;\r\n    }\r\n\r\n    if (operations) {\r\n        function filterOperations(data) {\r\n            let filteredOperations = data;\r\n\r\n            if (selectedBill) {\r\n                filteredOperations = data.filter(\r\n                    (operation) => operation.bill === selectedBill._id\r\n                );\r\n            }\r\n            if (selectedCategory) {\r\n                filteredOperations = data.filter(\r\n                    (operation) => operation.category === selectedCategory._id\r\n                );\r\n            }\r\n            if (selectedDate) {\r\n                filteredOperations = data.filter(\r\n                    (operation) => getDate(operation.date) === selectedDate.name\r\n                );\r\n            }\r\n            return filteredOperations;\r\n        }\r\n        const filteredOperations = filterOperations(operations);\r\n        const count = filteredOperations.length;\r\n        const sortedOperations = _.orderBy(\r\n            filteredOperations,\r\n            [sortBy.path],\r\n            [sortBy.order]\r\n        );\r\n        const operationsCrop = paginate(\r\n            sortedOperations,\r\n            currentPage,\r\n            pageSize\r\n        );\r\n\r\n        return (\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"d-flex flex-column\">\r\n                    <p className=\"text-center display-6\">Фильтры</p>\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"d-flex flex-column\">\r\n                            <p className=\"text-center\">По счету</p>\r\n                            <GroupList\r\n                                selectedItem={selectedBill}\r\n                                items={bills}\r\n                                onItemSelect={handleBillSelect}\r\n                            />\r\n                        </div>\r\n                        <div className=\"d-flex flex-column\">\r\n                            <p className=\"text-center\">По категории</p>\r\n                            <GroupList\r\n                                selectedItem={selectedCategory}\r\n                                items={categories}\r\n                                onItemSelect={handleCategorySelect}\r\n                            />\r\n                        </div>\r\n                        <div className=\"d-flex flex-column\">\r\n                            <p className=\"text-center\">По дате</p>\r\n                            <GroupList\r\n                                selectedItem={selectedDate}\r\n                                items={datesList}\r\n                                onItemSelect={handleDateSelect}\r\n                            />\r\n                            <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n                                <button\r\n                                    className=\"btn btn-secondary mt-2\"\r\n                                    onClick={clearFilter}\r\n                                >\r\n                                    {\" \"}\r\n                                    Очистить фильтр\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex flex-column\">\r\n                    {count > 0 && (\r\n                        <OperationsTable\r\n                            operations={operationsCrop}\r\n                            onSort={handleSort}\r\n                            selectedSort={sortBy}\r\n                            onDelete={handleDelete}\r\n                        />\r\n                    )}\r\n                    <div className=\"d-flex flex-column\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Pagination\r\n                                itemsCount={count}\r\n                                pageSize={pageSize}\r\n                                currentPage={currentPage}\r\n                                onPageChange={handlePageChange}\r\n                            />\r\n                        </div>\r\n                    </div>{\" \"}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return <h1 className=\"display-1 text-center\">Loading...</h1>;\r\n};\r\n\r\nexport default OperationsListPage;\r\n","export function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n}\n","import React from \"react\";\nimport OperationsListPage from \"../components/common/historyPage/operationsListPage\";\nimport { Link } from \"react-router-dom\";\n\nconst History = () => {\n    return (\n        <>\n            <div className=\"container col-md-10 offset-md-1 shadow p-4 d-flex flex-column\">\n                <div className=\"d-flex justify-content-between\">\n                    <div>\n                        <h1>История операций</h1>\n                    </div>\n                    <div>\n                        <Link to=\"/operation/createoperation\">\n                            <button className=\"btn btn-primary mb-4\">\n                                Создать новую операцию\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n\n                <OperationsListPage />\n            </div>\n        </>\n    );\n};\n\nexport default History;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\n\nconst LoginForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        console.log(data);\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label\" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst RegisterForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        licence: false\n    });\n\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        console.log(data);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = () => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Register</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Login</h3>\n                            <LoginForm />\n                            <p>\n                                Dont have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst BillsBlock = ({ bills }) => {\r\n    if (!bills) {\r\n        return <h1>Loading...</h1>;\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container col-md-5 shadow p-4\">\r\n                <h3>Счета</h3>{\" \"}\r\n                <Link to=\"/bill/createbill\">\r\n                    <button className=\"btn btn-primary mb-4\">\r\n                        Создать новый счет\r\n                    </button>\r\n                </Link>\r\n                <table className=\"table table-dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Название счета</th>\r\n                            <th scope=\"col\">Тип счета</th>\r\n                        </tr>\r\n                        {bills.map((bill) => {\r\n                            return (\r\n                                <tr key={bill._id}>\r\n                                    <td>{bill.name}</td>\r\n                                    <td>{bill.type}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </thead>\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nBillsBlock.propTypes = {\r\n    bills: PropTypes.array\r\n};\r\n\r\nexport default BillsBlock;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst CategoriesBlock = ({ categories }) => {\r\n    if (!categories) {\r\n        return <h1>Loading...</h1>;\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container col-md-5  shadow p-4\">\r\n                <h3>Категории</h3>{\" \"}\r\n                <Link to=\"/category/createcategory\">\r\n                    <button className=\"btn btn-primary mb-4\">\r\n                        Создать новую категорию\r\n                    </button>\r\n                </Link>\r\n                <table className=\"table table-dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Название категории</th>\r\n                            <th scope=\"col\">Тип категории </th>\r\n                        </tr>\r\n                        {categories.map((category) => {\r\n                            return (\r\n                                <tr key={category._id}>\r\n                                    <td>{category.name}</td>\r\n                                    <td>\r\n                                        {category.type === \"Income\"\r\n                                            ? \"Доход\"\r\n                                            : \"Расход\"}\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </thead>\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nCategoriesBlock.propTypes = {\r\n    categories: PropTypes.array\r\n};\r\n\r\nexport default CategoriesBlock;\r\n","import React from \"react\";\r\nimport { VictoryPie, VictoryTheme } from \"victory\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AnalyticsBlock = ({ operations, bills, categories }) => {\r\n    const incomeList = configureIncomeList(operations, categories);\r\n    const outcomeList = configureOutcomeList(operations, categories);\r\n\r\n    function configureIncomeList(operations, categories) {\r\n        const tempList = [];\r\n        for (const operation of operations) {\r\n            for (const category of categories) {\r\n                if (\r\n                    category._id === operation.category &&\r\n                    category.type === \"Income\"\r\n                ) {\r\n                    tempList.push(operation);\r\n                }\r\n            }\r\n        }\r\n        return tempList;\r\n    }\r\n\r\n    function configureOutcomeList(operations, categories) {\r\n        const tempList = [];\r\n        for (const operation of operations) {\r\n            for (const category of categories) {\r\n                if (\r\n                    category._id === operation.category &&\r\n                    category.type === \"Outcome\"\r\n                ) {\r\n                    tempList.push(operation);\r\n                }\r\n            }\r\n        }\r\n        return tempList;\r\n    }\r\n\r\n    const incomeSummary = incomeList.reduce(\r\n        (acc, el) => acc + Number(el.value),\r\n        0\r\n    );\r\n    const outcomeSummary = outcomeList.reduce(\r\n        (acc, el) => acc + Number(el.value),\r\n        0\r\n    );\r\n\r\n    const dataSet = [\r\n        { x: `Доходы: ${incomeSummary}`, y: incomeSummary },\r\n        { x: `Расходы: ${outcomeSummary}`, y: outcomeSummary }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"display-5 mb-4 text-center\">Статистика операций</h1>\r\n\r\n            <VictoryPie\r\n                theme={VictoryTheme.material}\r\n                style={{\r\n                    labels: {\r\n                        fontSize: 10,\r\n                        fill: \"#ffffff\",\r\n                        padding: 0\r\n                    }\r\n                }}\r\n                size={9}\r\n                padding={100}\r\n                colorScale={[\"green\", \"red\"]}\r\n                data={dataSet}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nAnalyticsBlock.propTypes = {\r\n    operations: PropTypes.array,\r\n    bills: PropTypes.array,\r\n    categories: PropTypes.array\r\n};\r\n\r\nexport default AnalyticsBlock;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TextField from \"./textField\";\r\nimport SelectField from \"./selectField\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadBills } from \"../../../redux/reducers/billsReducer\";\r\nimport { loadCategories } from \"../../../redux/reducers/categoriesReducer\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport { createOperation } from \"../../../redux/reducers/operationsReducer\";\r\n\r\nconst NewOperationForm = () => {\r\n    const [errors, setErrors] = useState({});\r\n    const dispatch = useDispatch();\r\n    const bills = useSelector((state) => state.bill.entities);\r\n    const categories = useSelector((state) => state.category.entities);\r\n    const billsLoading = useSelector((state) => state.bill.loading);\r\n    const categoriesLoading = useSelector((state) => state.category.loading);\r\n\r\n    const billsList = bills.map((bill) => ({\r\n        label: bill.name,\r\n        value: bill._id\r\n    }));\r\n    const categoriesList = categories.map((category) => ({\r\n        label: category.name,\r\n        value: category._id\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch(loadBills());\r\n        dispatch(loadCategories());\r\n    }, []);\r\n\r\n    const [data, setData] = useState({\r\n        bill: \"\",\r\n        category: \"\",\r\n        value: \"\",\r\n        commentary: \"\",\r\n        _id: \"\",\r\n        date: \"\",\r\n        name: \"\"\r\n    });\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            _id: nanoid(),\r\n            date: Date.now(),\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n\r\n    const validatorConfig = {\r\n        name: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            }\r\n        },\r\n        bill: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            }\r\n        },\r\n        category: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            }\r\n        },\r\n        value: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            }\r\n        },\r\n        commentary: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        console.log(data);\r\n        dispatch(createOperation(data));\r\n    };\r\n\r\n    if (billsLoading || categoriesLoading) {\r\n        return <h1>Loading...</h1>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <SelectField\r\n                    label=\"Выберите счёт\"\r\n                    name=\"bill\"\r\n                    defaultOption=\"\"\r\n                    options={billsList}\r\n                    onChange={handleChange}\r\n                    error={errors.bill}\r\n                />\r\n                <SelectField\r\n                    label=\"Выберите категорию\"\r\n                    name=\"category\"\r\n                    defaultOption=\"\"\r\n                    options={categoriesList}\r\n                    onChange={handleChange}\r\n                    error={errors.category}\r\n                />\r\n                <TextField\r\n                    label=\"Введите название операции\"\r\n                    name=\"name\"\r\n                    value={data.name}\r\n                    onChange={handleChange}\r\n                    error={errors.name}\r\n                />\r\n                <TextField\r\n                    label=\"Введите сумму\"\r\n                    name=\"value\"\r\n                    value={data.value}\r\n                    onChange={handleChange}\r\n                    error={errors.value}\r\n                />\r\n                <TextField\r\n                    label=\"Добавьте комментарий\"\r\n                    name=\"commentary\"\r\n                    value={data.commentary}\r\n                    onChange={handleChange}\r\n                    error={errors.commentary}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary w-100 mx-auto mb-4\"\r\n                    type=\"submit\"\r\n                    disabled={!isValid}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewOperationForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport TextField from \"./textField\";\r\nimport SelectField from \"./selectField\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadBills } from \"../../../redux/reducers/billsReducer\";\r\nimport { loadCategories } from \"../../../redux/reducers/categoriesReducer\";\r\nimport {\r\n    updateOperation,\r\n    loadOperations,\r\n    deleteOperation\r\n} from \"../../../redux/reducers/operationsReducer\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst EditOperationForm = () => {\r\n    const [errors, setErrors] = useState({});\r\n    const dispatch = useDispatch();\r\n    const operations = useSelector((state) => state.operation.entities);\r\n    const bills = useSelector((state) => state.bill.entities);\r\n    const categories = useSelector((state) => state.category.entities);\r\n    const operationsLoading = useSelector((state) => state.operation.loading);\r\n    const billsLoading = useSelector((state) => state.bill.loading);\r\n    const categoriesLoading = useSelector((state) => state.category.loading);\r\n    const operationsList = operations.map((operation) => ({\r\n        label: operation.name,\r\n        value: operation._id\r\n    }));\r\n    const billsList = bills.map((bill) => ({\r\n        label: bill.name,\r\n        value: bill._id\r\n    }));\r\n    const categoriesList = categories.map((category) => ({\r\n        label: category.name,\r\n        value: category._id\r\n    }));\r\n    const [data, setData] = useState({\r\n        bill: \"\",\r\n        category: \"\",\r\n        value: \"\",\r\n        commentary: \"\",\r\n        date: \"\",\r\n        name: \"\",\r\n        _id: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(loadBills());\r\n        dispatch(loadCategories());\r\n        dispatch(loadOperations());\r\n    }, []);\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n\r\n    const validatorConfig = {\r\n        name: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            }\r\n        },\r\n        bill: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            }\r\n        },\r\n        category: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            }\r\n        },\r\n        value: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            }\r\n        },\r\n        commentary: {\r\n            isRequired: {\r\n                message: \"Поле обязательно для заполнения\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        console.log(data);\r\n        dispatch(updateOperation(data));\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        if (errors._id) {\r\n            toast(\"Choose operation\");\r\n            return;\r\n        }\r\n        dispatch(deleteOperation(id));\r\n    };\r\n\r\n    if (billsLoading || categoriesLoading || operationsLoading) {\r\n        return <h1>Loading...</h1>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <SelectField\r\n                    label=\"Выберите операцию\"\r\n                    name=\"_id\"\r\n                    defaultOption=\"\"\r\n                    options={operationsList}\r\n                    onChange={handleChange}\r\n                    error={errors.operation}\r\n                />\r\n                <SelectField\r\n                    label=\"Выберите счёт\"\r\n                    name=\"bill\"\r\n                    defaultOption=\"\"\r\n                    options={billsList}\r\n                    onChange={handleChange}\r\n                    error={errors.bill}\r\n                />\r\n                <SelectField\r\n                    label=\"Выберите категорию\"\r\n                    name=\"category\"\r\n                    defaultOption=\"\"\r\n                    options={categoriesList}\r\n                    onChange={handleChange}\r\n                    error={errors.category}\r\n                />\r\n                <TextField\r\n                    label=\"Введите название операции\"\r\n                    name=\"name\"\r\n                    value={data.name}\r\n                    onChange={handleChange}\r\n                    error={errors.name}\r\n                />\r\n                <TextField\r\n                    label=\"Введите сумму\"\r\n                    name=\"value\"\r\n                    value={data.value}\r\n                    onChange={handleChange}\r\n                    error={errors.value}\r\n                />\r\n                <TextField\r\n                    label=\"Добавьте комментарий\"\r\n                    name=\"commentary\"\r\n                    value={data.commentary}\r\n                    onChange={handleChange}\r\n                    error={errors.commentary}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary w-100 mx-auto mb-4\"\r\n                    type=\"submit\"\r\n                    disabled={!isValid}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </form>\r\n            <button\r\n                onClick={() => handleDelete(data._id)}\r\n                className=\"btn btn-danger w-100 mx-auto\"\r\n                type=\"submit\"\r\n            >\r\n                Delete\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditOperationForm;\r\n","import Bills from \"./bills\";\nimport Categories from \"./categories\";\nimport History from \"./history\";\nimport Login from \"./login\";\nimport Main from \"./main\";\nimport Operations from \"./operations\";\nimport Settings from \"./settings\";\n\nconst LAYOUTS = {\n    Operations,\n    Categories,\n    Settings,\n    Bills,\n    Main,\n    Login,\n    History\n};\n\nexport default LAYOUTS;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport NewOperationForm from \"../components/common/form/newOperationForm\";\nimport EditOperationForm from \"../components/common/form/editOperationForm\";\nconst Operations = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"createoperation\" ? type : \"editoperation\"\n    );\n    const toggleFormType = () => {\n        setFormType((prevState) =>\n            prevState === \"editoperation\" ? \"createoperation\" : \"editoperation\"\n        );\n    };\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"editoperation\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Редактирование Операции</h3>\n                            <EditOperationForm />\n                            <p>\n                                Еще нет операции?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Переходите по этой ссылке\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Создание новой операции</h3>\n                            <NewOperationForm />\n                            <p>\n                                Хотите редактировать существующую операцию?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Переходите по этой ссылке\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Operations;\n","import React from \"react\";\n\nconst Settings = () => {\n    return (\n        <>\n            <div className=\"container col-md-10 offset-md-1 shadow p-4\">\n                <h1>Settings</h1>\n            </div>\n        </>\n    );\n};\n\nexport default Settings;\n","import React, { useEffect } from \"react\";\nimport BillsBlock from \"../components/ui/billsBlock\";\nimport CategoriesBlock from \"../components/ui/categoriesBlock\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadBills } from \"../redux/reducers/billsReducer\";\nimport { loadCategories } from \"../redux/reducers/categoriesReducer\";\nimport { loadOperations } from \"../redux/reducers/operationsReducer\";\nimport AnalyticsBlock from \"../components/ui/analyticsBlock\";\n\nconst Main = () => {\n    const dispatch = useDispatch();\n\n    const operations = useSelector((state) => state.operation.entities);\n    const bills = useSelector((state) => state.bill.entities);\n    const categories = useSelector((state) => state.category.entities);\n    const operationsLoading = useSelector((state) => state.operation.loading);\n    const billsLoading = useSelector((state) => state.bill.loading);\n    const categoriesLoading = useSelector((state) => state.category.loading);\n\n    useEffect(() => {\n        dispatch(loadBills());\n        dispatch(loadCategories());\n        dispatch(loadOperations());\n    }, []);\n\n    if (billsLoading || categoriesLoading || operationsLoading) {\n        return <h1 className=\"text-center\">Loading...</h1>;\n    }\n\n    return (\n        <>\n            <div className=\"container col-md-10 shadow p-4 \">\n                <h1 className=\"display-1 text-center\">Money flow</h1>\n                <h3 className=\"mb-4 text-center\">\n                    ReactJS, Redux Toolkit and Victory Library based Web\n                    Application for simple and easy money analytics\n                </h3>\n                <div className=\"d-flex md-4\">\n                    <BillsBlock bills={bills} />\n                    <CategoriesBlock categories={categories} />\n                </div>\n                <div>\n                    <AnalyticsBlock\n                        bills={bills}\n                        categories={categories}\n                        operations={operations}\n                    />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Main;\n","import React, { useEffect } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport NavBar from \"./components/ui/navBar\";\nimport LAYOUTS from \"./layouts\";\nimport { useDispatch } from \"react-redux\";\nimport { loadBills } from \"./redux/reducers/billsReducer\";\nimport { loadCategories } from \"./redux/reducers/categoriesReducer\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { loadOperations } from \"./redux/reducers/operationsReducer\";\n\nfunction App() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(loadBills());\n        dispatch(loadCategories());\n        dispatch(loadOperations());\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <ToastContainer />\n            <NavBar />\n            <Switch>\n                <Route\n                    path=\"/operation/:type?\"\n                    component={LAYOUTS.Operations}\n                />\n                <Route path=\"/category/:type?\" component={LAYOUTS.Categories} />\n                <Route path=\"/bill/:type?\" component={LAYOUTS.Bills} />\n                <Route path=\"/login/:type?\" component={LAYOUTS.Login} />\n                <Route path=\"/history\" component={LAYOUTS.History} />\n                <Route path=\"/settings\" component={LAYOUTS.Settings} />\n                <Route path=\"/\" exact component={LAYOUTS.Main} />\n                <Redirect to=\"/\" />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport billReducer from \"../reducers/billsReducer\";\r\nimport categoryReducer from \"../reducers/categoriesReducer\";\r\nimport operationReducer from \"../reducers/operationsReducer\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        bill: billReducer,\r\n        category: categoryReducer,\r\n        operation: operationReducer\r\n    },\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\r\n    devTools: process.env.NODE_ENV !== \"production\"\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/redux/store/store\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>\n);\n"],"sourceRoot":""}